{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.37.4.10188",
      "templateHash": "5227267677200568408"
    }
  },
  "parameters": {
    "environment": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "The environment name (dev, prod)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location for all resources"
      }
    },
    "namePrefix": {
      "type": "string",
      "defaultValue": "casezero",
      "metadata": {
        "description": "The name prefix for all resources"
      }
    },
    "enableApplicationInsights": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable Application Insights"
      }
    }
  },
  "variables": {
    "resourceNameSuffix": "[format('-{0}', parameters('environment'))]",
    "tags": {
      "Environment": "[parameters('environment')]",
      "Project": "CaseZero",
      "Component": "CaseGenerator",
      "CostCenter": "IT",
      "ManagedBy": "GitHub-Actions"
    }
  },
  "resources": [
    {
      "condition": "[parameters('enableApplicationInsights')]",
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[format('{0}-casegen-logs{1}', parameters('namePrefix'), variables('resourceNameSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": "[if(equals(parameters('environment'), 'prod'), 90, 30)]",
        "features": {
          "searchVersion": 1,
          "legacy": 0,
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "condition": "[parameters('enableApplicationInsights')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}-casegen-insights{1}', parameters('namePrefix'), variables('resourceNameSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[if(parameters('enableApplicationInsights'), resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-casegen-logs{1}', parameters('namePrefix'), variables('resourceNameSuffix'))), null())]",
        "RetentionInDays": "[if(equals(parameters('environment'), 'prod'), 90, 30)]",
        "SamplingPercentage": "[if(equals(parameters('environment'), 'prod'), 100, 50)]",
        "DisableIpMasking": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-casegen-logs{1}', parameters('namePrefix'), variables('resourceNameSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-07-01",
      "name": "[format('{0}-casegen-kv{1}-{2}', parameters('namePrefix'), variables('resourceNameSuffix'), uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "tags": "[variables('tags')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": true,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": "[if(equals(parameters('environment'), 'prod'), 90, 7)]",
        "enableRbacAuthorization": true,
        "publicNetworkAccess": "Enabled",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "Allow"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id))]",
      "location": "[parameters('location')]",
      "tags": "[union(variables('tags'), createObject('Purpose', 'CaseGenerator'))]",
      "sku": {
        "name": "[if(equals(parameters('environment'), 'prod'), 'Standard_GRS', 'Standard_LRS')]"
      },
      "kind": "StorageV2",
      "properties": {
        "dnsEndpointType": "Standard",
        "defaultToOAuthAuthentication": true,
        "publicNetworkAccess": "Enabled",
        "allowCrossTenantReplication": false,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": false,
        "allowSharedKeyAccess": true,
        "networkAcls": {
          "bypass": "AzureServices",
          "virtualNetworkRules": [],
          "ipRules": [],
          "defaultAction": "Allow"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "requireInfrastructureEncryption": false,
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            },
            "queue": {
              "keyType": "Account",
              "enabled": true
            },
            "table": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)), 'default')]",
      "properties": {
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": "[if(equals(parameters('environment'), 'prod'), 30, 7)]"
        },
        "containerDeleteRetentionPolicy": {
          "enabled": true,
          "days": "[if(equals(parameters('environment'), 'prod'), 30, 7)]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)), 'default', 'cases')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}/{2}', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)), 'default', 'bundles')]",
      "properties": {
        "publicAccess": "None"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)), 'default')]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}-casegen-func-asp{1}', parameters('namePrefix'), variables('resourceNameSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[union(variables('tags'), createObject('Purpose', 'CaseGenerator'))]",
      "sku": {
        "name": "[if(equals(parameters('environment'), 'prod'), 'EP1', 'Y1')]",
        "tier": "[if(equals(parameters('environment'), 'prod'), 'ElasticPremium', 'Dynamic')]"
      },
      "properties": {
        "reserved": false,
        "maximumElasticWorkerCount": "[if(equals(parameters('environment'), 'prod'), 10, 1)]"
      },
      "kind": "functionapp"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix'))]",
      "location": "[parameters('location')]",
      "tags": "[union(variables('tags'), createObject('Purpose', 'CaseGenerator'))]",
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-casegen-func-asp{1}', parameters('namePrefix'), variables('resourceNameSuffix')))]",
        "httpsOnly": true,
        "clientAffinityEnabled": false,
        "publicNetworkAccess": "Enabled",
        "siteConfig": {
          "netFrameworkVersion": "v8.0",
          "use32BitWorkerProcess": false,
          "ftpsState": "Disabled",
          "minTlsVersion": "1.2",
          "scmMinTlsVersion": "1.2",
          "http20Enabled": true,
          "alwaysOn": "[if(equals(parameters('environment'), 'prod'), true(), false())]",
          "functionsRuntimeScaleMonitoringEnabled": true
        }
      },
      "identity": {
        "type": "SystemAssigned"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-casegen-func-asp{1}', parameters('namePrefix'), variables('resourceNameSuffix')))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2023-01-01",
      "name": "[format('{0}/{1}', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix')), 'appsettings')]",
      "properties": {
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "FUNCTIONS_WORKER_RUNTIME": "dotnet-isolated",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id))), '2023-01-01').keys[0].value)]",
        "WEBSITE_CONTENTSHARE": "[format('{0}-content', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix')))]",
        "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id))), '2023-01-01').keys[0].value)]",
        "WEBSITE_RUN_FROM_PACKAGE": "1",
        "ASPNETCORE_ENVIRONMENT": "[if(equals(parameters('environment'), 'prod'), 'Production', 'Development')]",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[if(parameters('enableApplicationInsights'), coalesce(tryGet(if(parameters('enableApplicationInsights'), reference(resourceId('Microsoft.Insights/components', format('{0}-casegen-insights{1}', parameters('namePrefix'), variables('resourceNameSuffix'))), '2020-02-02', 'full'), null()), 'properties', 'InstrumentationKey'), ''), '')]",
        "APPLICATIONINSIGHTS_CONNECTION_STRING": "[if(parameters('enableApplicationInsights'), coalesce(tryGet(if(parameters('enableApplicationInsights'), reference(resourceId('Microsoft.Insights/components', format('{0}-casegen-insights{1}', parameters('namePrefix'), variables('resourceNameSuffix'))), '2020-02-02', 'full'), null()), 'properties', 'ConnectionString'), ''), '')]",
        "CaseGeneratorStorage__ConnectionString": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1};EndpointSuffix=core.windows.net', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id))), '2023-01-01').keys[0].value)]",
        "CaseGeneratorStorage__CasesContainer": "cases",
        "CaseGeneratorStorage__BundlesContainer": "bundles",
        "KeyVault__VaultUri": "[reference(resourceId('Microsoft.KeyVault/vaults', format('{0}-casegen-kv{1}-{2}', parameters('namePrefix'), variables('resourceNameSuffix'), uniqueString(resourceGroup().id))), '2023-07-01').vaultUri]",
        "TaskHub": "CaseGeneratorHub"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', format('{0}-casegen-insights{1}', parameters('namePrefix'), variables('resourceNameSuffix')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Web/sites', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix')))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}-casegen-kv{1}-{2}', parameters('namePrefix'), variables('resourceNameSuffix'), uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', format('{0}-casegen-kv{1}-{2}', parameters('namePrefix'), variables('resourceNameSuffix'), uniqueString(resourceGroup().id)))]",
      "name": "[guid(resourceId('Microsoft.KeyVault/vaults', format('{0}-casegen-kv{1}-{2}', parameters('namePrefix'), variables('resourceNameSuffix'), uniqueString(resourceGroup().id))), resourceId('Microsoft.Web/sites', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix'))), 'Key Vault Secrets User')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix'))), '2023-01-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix')))]",
        "[resourceId('Microsoft.KeyVault/vaults', format('{0}-casegen-kv{1}-{2}', parameters('namePrefix'), variables('resourceNameSuffix'), uniqueString(resourceGroup().id)))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2022-04-01",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)))]",
      "name": "[guid(resourceId('Microsoft.Storage/storageAccounts', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id))), resourceId('Microsoft.Web/sites', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix'))), 'Storage Blob Data Contributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix'))), '2023-01-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)))]",
        "[resourceId('Microsoft.Web/sites', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix')))]"
      ]
    }
  ],
  "outputs": {
    "functionAppName": {
      "type": "string",
      "value": "[format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix'))]"
    },
    "functionAppUrl": {
      "type": "string",
      "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix'))), '2023-01-01').defaultHostName)]"
    },
    "functionAppId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Web/sites', format('{0}-casegen-func{1}', parameters('namePrefix'), variables('resourceNameSuffix')))]"
    },
    "caseGeneratorStorageName": {
      "type": "string",
      "value": "[format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id))]"
    },
    "caseGeneratorStorageId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Storage/storageAccounts', format('{0}genstr{1}{2}', parameters('namePrefix'), parameters('environment'), uniqueString(resourceGroup().id)))]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[format('{0}-casegen-kv{1}-{2}', parameters('namePrefix'), variables('resourceNameSuffix'), uniqueString(resourceGroup().id))]"
    },
    "keyVaultUri": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.KeyVault/vaults', format('{0}-casegen-kv{1}-{2}', parameters('namePrefix'), variables('resourceNameSuffix'), uniqueString(resourceGroup().id))), '2023-07-01').vaultUri]"
    },
    "keyVaultId": {
      "type": "string",
      "value": "[resourceId('Microsoft.KeyVault/vaults', format('{0}-casegen-kv{1}-{2}', parameters('namePrefix'), variables('resourceNameSuffix'), uniqueString(resourceGroup().id)))]"
    },
    "applicationInsightsName": {
      "type": "string",
      "value": "[if(parameters('enableApplicationInsights'), format('{0}-casegen-insights{1}', parameters('namePrefix'), variables('resourceNameSuffix')), '')]"
    },
    "applicationInsightsConnectionString": {
      "type": "string",
      "value": "[if(parameters('enableApplicationInsights'), coalesce(tryGet(if(parameters('enableApplicationInsights'), reference(resourceId('Microsoft.Insights/components', format('{0}-casegen-insights{1}', parameters('namePrefix'), variables('resourceNameSuffix'))), '2020-02-02', 'full'), null()), 'properties', 'ConnectionString'), ''), '')]"
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "value": "[if(parameters('enableApplicationInsights'), format('{0}-casegen-logs{1}', parameters('namePrefix'), variables('resourceNameSuffix')), '')]"
    },
    "logAnalyticsWorkspaceId": {
      "type": "string",
      "value": "[if(parameters('enableApplicationInsights'), resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-casegen-logs{1}', parameters('namePrefix'), variables('resourceNameSuffix'))), '')]"
    }
  }
}