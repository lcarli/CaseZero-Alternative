name: 🔧 Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18'

jobs:
  # Backend CI
  backend-ci:
    name: 🔴 Backend CI
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 📦 Restore dependencies
        run: dotnet restore
        working-directory: ./backend/CaseZeroApi

      - name: 🔨 Build application
        run: dotnet build --no-restore --configuration Release
        working-directory: ./backend/CaseZeroApi

      - name: 🧪 Run unit tests
        run: dotnet test --no-build --configuration Release --verbosity normal
        working-directory: ./backend/CaseZeroApi

      - name: 📊 Publish test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: 🔴 Backend Test Results
          path: 'backend/CaseZeroApi/TestResults/*.xml'
          reporter: dotnet-trx

  # Frontend CI
  frontend-ci:
    name: 🔵 Frontend CI
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: 📦 Install dependencies
        run: npm ci
        working-directory: ./frontend

      - name: 🔍 Run ESLint
        run: npm run lint
        working-directory: ./frontend

      - name: 🧪 Run unit tests
        run: npm run test
        working-directory: ./frontend

      - name: 🔨 Build application
        run: npm run build
        working-directory: ./frontend

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./frontend/dist
          retention-days: 7

  # Integration Tests
  integration-tests:
    name: 🔗 Integration Tests
    runs-on: ubuntu-latest
    needs: [backend-ci, frontend-ci]

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: 📦 Install frontend dependencies
        run: npm ci
        working-directory: ./frontend

      - name: 📦 Restore backend dependencies
        run: dotnet restore
        working-directory: ./backend/CaseZeroApi

      - name: 🧪 Run integration tests
        run: dotnet test --configuration Release --verbosity normal
        working-directory: ./backend/CaseZeroApi.IntegrationTests
        continue-on-error: true

      - name: 📊 Publish integration test results
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: 🔗 Integration Test Results
          path: 'backend/CaseZeroApi.IntegrationTests/TestResults/*.xml'
          reporter: dotnet-trx

  # Security Scan
  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: 'csharp,javascript'

      - name: 🔧 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 🔨 Build for analysis
        run: |
          dotnet restore ./backend/CaseZeroApi
          dotnet build ./backend/CaseZeroApi --no-restore

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Dependency Check
  dependency-check:
    name: 📋 Dependency Check
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run dependency audit (Frontend)
        run: npm audit --audit-level moderate
        working-directory: ./frontend

      - name: 🔍 Check .NET vulnerabilities
        run: dotnet list package --vulnerable --include-transitive
        working-directory: ./backend/CaseZeroApi

  # Case Validation
  case-validation:
    name: 📁 Case Validation
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Make validation script executable
        run: chmod +x ./validate_case.sh

      - name: ✅ Validate Case001
        run: ./validate_case.sh Case001

      - name: 📊 Upload validation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: case-validation-report
          path: ./case-validation-*.log
          retention-days: 7