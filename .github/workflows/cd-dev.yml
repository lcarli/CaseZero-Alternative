name: üöÄ Deploy to DEV Environment

on:
  push:
    branches: [ develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'development'
        type: choice
        options:
        - development

env:
  AZURE_WEBAPP_NAME: casezero-dev
  DOTNET_VERSION: '8.0.x'
  NODE_VERSION: '18'

jobs:
  build-and-test:
    name: üî® Build & Test
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: üîß Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ./frontend/package-lock.json

      - name: üì¶ Install frontend dependencies
        run: npm ci
        working-directory: ./frontend

      - name: üî® Build frontend
        run: npm run build
        working-directory: ./frontend

      - name: üì¶ Restore backend dependencies
        run: dotnet restore
        working-directory: ./backend/CaseZeroApi

      - name: üî® Build backend
        run: dotnet build --no-restore --configuration Release
        working-directory: ./backend/CaseZeroApi

      - name: üß™ Run backend tests
        run: dotnet test --no-build --configuration Release
        working-directory: ./backend/CaseZeroApi.Tests
        continue-on-error: false

      - name: üß™ Run frontend tests
        run: npm run test:run
        working-directory: ./frontend
        continue-on-error: false

      - name: üì¶ Publish backend
        run: dotnet publish -c Release -o ./publish
        working-directory: ./backend/CaseZeroApi

      - name: üì§ Upload backend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-build
          path: ./backend/CaseZeroApi/publish

      - name: üì§ Upload frontend artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ./frontend/dist

  deploy-to-dev:
    name: üöÄ Deploy to Development
    runs-on: ubuntu-latest
    needs: build-and-test
    environment: development
    
    steps:
      - name: üì• Download backend artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-build
          path: ./backend

      - name: üì• Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: ./frontend

      - name: üîê Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS_DEV }}

      - name: üöÄ Deploy Backend to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'production'
          package: ./backend

      - name: üåê Deploy Frontend to Azure Static Web Apps
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_DEV }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "./frontend"
          api_location: ""
          output_location: "dist"

      - name: üè• Health Check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          
          # Health check for backend
          BACKEND_URL="https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          echo "Checking backend health at: $BACKEND_URL/api/health"
          
          for i in {1..10}; do
            if curl -f "$BACKEND_URL/api/health" > /dev/null 2>&1; then
              echo "‚úÖ Backend is healthy!"
              break
            else
              echo "‚è≥ Attempt $i: Backend not ready yet, waiting..."
              sleep 15
            fi
            
            if [ $i -eq 10 ]; then
              echo "‚ùå Backend health check failed after 10 attempts"
              exit 1
            fi
          done

      - name: üìä Post Deployment Tests
        run: |
          # Basic smoke tests
          echo "Running post-deployment smoke tests..."
          
          BACKEND_URL="https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          
          # Test API endpoints
          echo "Testing API endpoints..."
          curl -f "$BACKEND_URL/api/cases" -H "Accept: application/json" || echo "‚ö†Ô∏è Cases endpoint might require authentication"
          
          echo "‚úÖ Deployment successful to DEV environment!"

  notify-teams:
    name: üì¢ Notify Teams
    runs-on: ubuntu-latest
    needs: [build-and-test, deploy-to-dev]
    if: always()
    
    steps:
      - name: üì¢ Send Teams Notification
        if: always()
        uses: aliencube/microsoft-teams-actions@v0.8.0
        with:
          webhook_uri: ${{ secrets.TEAMS_WEBHOOK_URL }}
          title: "üöÄ CaseZero DEV Deployment"
          summary: "Deployment to DEV environment completed"
          text: |
            **Status:** ${{ needs.deploy-to-dev.result == 'success' && '‚úÖ Success' || '‚ùå Failed' }}
            **Environment:** Development
            **Branch:** ${{ github.ref_name }}
            **Commit:** ${{ github.sha }}
            **Triggered by:** ${{ github.actor }}
            
            **Application URLs:**
            - Backend: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net
            - Frontend: https://casezero-dev.azurestaticapps.net
          theme_color: ${{ needs.deploy-to-dev.result == 'success' && '00FF00' || 'FF0000' }}