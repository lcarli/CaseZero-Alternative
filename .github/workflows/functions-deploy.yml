name: 🚀 Deploy Case Generator Functions

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: choice
        options:
        - development
        - production
      force_deploy:
        description: 'Force deployment even if no changes detected'
        required: false
        type: boolean
        default: false
  push:
    branches:
      - main
    paths:
      - 'backend/CaseGen.Functions/**'
      - '.github/workflows/functions-deploy.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/CaseGen.Functions/**'

env:
  AZURE_FUNCTIONAPP_NAME_DEV: casezero-func-dev
  AZURE_FUNCTIONAPP_NAME_PROD: casezero-func-prod
  AZURE_RESOURCE_GROUP_DEV: casezero-dev-rg
  AZURE_RESOURCE_GROUP_PROD: casezero-prod-rg
  DOTNET_VERSION: '8.0.x'
  WORKING_DIRECTORY: backend/CaseGen.Functions

jobs:
  # Build and test the Functions project
  build-and-test:
    name: 🔨 Build & Test Functions
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4
      
    - name: ⚙️ Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: 📦 Cache dependencies
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: 📥 Restore dependencies
      run: dotnet restore
      working-directory: ${{ env.WORKING_DIRECTORY }}
      
    - name: 🔨 Build project
      run: dotnet build --configuration Release --no-restore
      working-directory: ${{ env.WORKING_DIRECTORY }}
      
    - name: 🧪 Run tests (if any)
      run: dotnet test --configuration Release --no-build --verbosity normal
      working-directory: ${{ env.WORKING_DIRECTORY }}
      continue-on-error: true
      
    - name: 📦 Publish application
      run: dotnet publish --configuration Release --output ./output
      working-directory: ${{ env.WORKING_DIRECTORY }}
      
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: functions-build-${{ github.run_id }}
        path: ${{ env.WORKING_DIRECTORY }}/output/
        retention-days: 30

  # Deploy to Development
  deploy-dev:
    name: 🚀 Deploy to Development
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'development')
    environment: development
    
    steps:
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: functions-build-${{ github.run_id }}
        path: ./functions-output
        
    - name: 🔐 Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 🚀 Deploy to Azure Functions (Dev)
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_DEV }}
        package: ./functions-output
        
    - name: ✅ Verify deployment
      run: |
        echo "🔍 Verifying Functions deployment..."
        # Add basic health check here if needed
        curl -f "https://${{ env.AZURE_FUNCTIONAPP_NAME_DEV }}.azurewebsites.net" || echo "⚠️ Health check endpoint not available"
        
    - name: 🔄 Restart Function App (if needed)
      run: |
        az functionapp restart --name ${{ env.AZURE_FUNCTIONAPP_NAME_DEV }} --resource-group ${{ env.AZURE_RESOURCE_GROUP_DEV }}

  # Deploy to Production (manual approval required)
  deploy-prod:
    name: 🚀 Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-and-test]
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    environment: production
    
    steps:
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: functions-build-${{ github.run_id }}
        path: ./functions-output
        
    - name: 🔐 Azure Login
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: 🚀 Deploy to Azure Functions (Prod)
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME_PROD }}
        package: ./functions-output
        
    - name: ✅ Verify deployment
      run: |
        echo "🔍 Verifying Functions deployment..."
        # Add comprehensive health checks for production
        curl -f "https://${{ env.AZURE_FUNCTIONAPP_NAME_PROD }}.azurewebsites.net" || echo "⚠️ Health check endpoint not available"
        
    - name: 🔄 Restart Function App (if needed)
      run: |
        az functionapp restart --name ${{ env.AZURE_FUNCTIONAPP_NAME_PROD }} --resource-group ${{ env.AZURE_RESOURCE_GROUP_PROD }}

  # Cleanup artifacts
  cleanup:
    name: 🧹 Cleanup
    runs-on: ubuntu-latest
    needs: [deploy-dev, deploy-prod]
    if: always()
    
    steps:
    - name: 🗑️ Delete build artifacts
      uses: geekyeggo/delete-artifact@v5
      with:
        name: functions-build-${{ github.run_id }}
        failOnError: false